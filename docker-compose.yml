services:
  database:
    image: mysql:8.0
    platform: linux/amd64
    command:
      - "--default-authentication-plugin=mysql_native_password"
    environment:
      - MYSQL_RANDOM_ROOT_PASSWORD=yes
      - MYSQL_DATABASE=codetest
      - MYSQL_USER=codetest
      - MYSQL_PASSWORD=swordfish
    ports:
      - "3306:3306"
    restart: always

  data-ingest: 
    build:
        context: ./images/data-ingest
        dockerfile: Dockerfile
    depends_on:
        - database
    volumes:
        - ./data:/app/data
    environment: &common-env
      # database config
      DB_HOST: database
      DB_USER: codetest
      DB_PASSWORD: swordfish
      DB_NAME: codetest
      DB_PORT: 3306
      # file paths
      DATA_PATH: /app/data
      PEOPLE_FILE: people.csv
      PLACES_FILE: places.csv
      OUTPUT_FILE: summary_output.json
      # processing config
      MAX_DB_RETRIES: 30
      DB_RETRY_DELAY: 2
      BATCH_SIZE: 1000
      # character encoding
      FILE_ENCODING: utf-8
    networks:
      - default

  data-output:
    build:
      context: ./images/data-output
      dockerfile: Dockerfile
    depends_on:
      - database
    volumes:
      - ./data:/app/data
    environment:
      <<: *common-env  # this inherits all the common environment variables
    networks:
      - default


  example-c:
    image: example-c
    build: images/example-c
    command: ["./example"]
    volumes:
      - ./data:/data

  example-node:
    image: example-node
    build: images/example-node
    command: ["./example.js"]
    volumes:
      - ./data:/data

  example-python:
    image: example-python
    build: images/example-python
    command: ["./example.py"]
    volumes:
      - ./data:/data

  example-r:
    image: example-r
    build: images/example-r
    command: ["./example.R"]
    volumes:
      - ./data:/data

  example-ruby:
    image: example-ruby
    build: images/example-ruby
    command: ["./example.rb"]
    volumes:
      - ./data:/data

  example-swift:
    image: example-swift
    platform: linux/amd64
    build: images/example-swift
    command: ["swift", "run"]
    volumes:
      - ./data:/data
